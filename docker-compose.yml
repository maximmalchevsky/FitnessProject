networks:
  net:
    name: "net"
    driver: "bridge"

services:

  postgres:
    container_name: postgres
    image: postgres:16.3-alpine
    ports:
      - 5432:5432
    volumes:
      - './database:/var/lib/postgresql/data'
    restart: unless-stopped

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d database -h 127.0.0.1 -p 5432" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "12345678"
      POSTGRES_DB: "database"
    networks:
      - net

  backend:
    container_name: backend
    build:
      context: server
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "localhost:8080/health" ]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - ./.tmp:/.tmp
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - net

  frontend:
    container_name: frontend
    build:
      context: web
      dockerfile: Dockerfile
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - net
